--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=31 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_rma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[30..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[30..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3125w[2..0]	: WIRE;
	w_anode3138w[3..0]	: WIRE;
	w_anode3155w[3..0]	: WIRE;
	w_anode3165w[3..0]	: WIRE;
	w_anode3175w[3..0]	: WIRE;
	w_anode3185w[3..0]	: WIRE;
	w_anode3195w[3..0]	: WIRE;
	w_anode3205w[3..0]	: WIRE;
	w_anode3215w[3..0]	: WIRE;
	w_anode3227w[2..0]	: WIRE;
	w_anode3236w[3..0]	: WIRE;
	w_anode3247w[3..0]	: WIRE;
	w_anode3257w[3..0]	: WIRE;
	w_anode3267w[3..0]	: WIRE;
	w_anode3277w[3..0]	: WIRE;
	w_anode3287w[3..0]	: WIRE;
	w_anode3297w[3..0]	: WIRE;
	w_anode3307w[3..0]	: WIRE;
	w_anode3318w[2..0]	: WIRE;
	w_anode3327w[3..0]	: WIRE;
	w_anode3338w[3..0]	: WIRE;
	w_anode3348w[3..0]	: WIRE;
	w_anode3358w[3..0]	: WIRE;
	w_anode3368w[3..0]	: WIRE;
	w_anode3378w[3..0]	: WIRE;
	w_anode3388w[3..0]	: WIRE;
	w_anode3398w[3..0]	: WIRE;
	w_anode3409w[2..0]	: WIRE;
	w_anode3418w[3..0]	: WIRE;
	w_anode3429w[3..0]	: WIRE;
	w_anode3439w[3..0]	: WIRE;
	w_anode3449w[3..0]	: WIRE;
	w_anode3459w[3..0]	: WIRE;
	w_anode3469w[3..0]	: WIRE;
	w_anode3479w[3..0]	: WIRE;
	w_anode3489w[3..0]	: WIRE;
	w_data3123w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[30..0] = eq_wire[30..0];
	eq_wire[] = ( ( w_anode3489w[3..3], w_anode3479w[3..3], w_anode3469w[3..3], w_anode3459w[3..3], w_anode3449w[3..3], w_anode3439w[3..3], w_anode3429w[3..3], w_anode3418w[3..3]), ( w_anode3398w[3..3], w_anode3388w[3..3], w_anode3378w[3..3], w_anode3368w[3..3], w_anode3358w[3..3], w_anode3348w[3..3], w_anode3338w[3..3], w_anode3327w[3..3]), ( w_anode3307w[3..3], w_anode3297w[3..3], w_anode3287w[3..3], w_anode3277w[3..3], w_anode3267w[3..3], w_anode3257w[3..3], w_anode3247w[3..3], w_anode3236w[3..3]), ( w_anode3215w[3..3], w_anode3205w[3..3], w_anode3195w[3..3], w_anode3185w[3..3], w_anode3175w[3..3], w_anode3165w[3..3], w_anode3155w[3..3], w_anode3138w[3..3]));
	w_anode3125w[] = ( (w_anode3125w[1..1] & (! data_wire[4..4])), (w_anode3125w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3138w[] = ( (w_anode3138w[2..2] & (! w_data3123w[2..2])), (w_anode3138w[1..1] & (! w_data3123w[1..1])), (w_anode3138w[0..0] & (! w_data3123w[0..0])), w_anode3125w[2..2]);
	w_anode3155w[] = ( (w_anode3155w[2..2] & (! w_data3123w[2..2])), (w_anode3155w[1..1] & (! w_data3123w[1..1])), (w_anode3155w[0..0] & w_data3123w[0..0]), w_anode3125w[2..2]);
	w_anode3165w[] = ( (w_anode3165w[2..2] & (! w_data3123w[2..2])), (w_anode3165w[1..1] & w_data3123w[1..1]), (w_anode3165w[0..0] & (! w_data3123w[0..0])), w_anode3125w[2..2]);
	w_anode3175w[] = ( (w_anode3175w[2..2] & (! w_data3123w[2..2])), (w_anode3175w[1..1] & w_data3123w[1..1]), (w_anode3175w[0..0] & w_data3123w[0..0]), w_anode3125w[2..2]);
	w_anode3185w[] = ( (w_anode3185w[2..2] & w_data3123w[2..2]), (w_anode3185w[1..1] & (! w_data3123w[1..1])), (w_anode3185w[0..0] & (! w_data3123w[0..0])), w_anode3125w[2..2]);
	w_anode3195w[] = ( (w_anode3195w[2..2] & w_data3123w[2..2]), (w_anode3195w[1..1] & (! w_data3123w[1..1])), (w_anode3195w[0..0] & w_data3123w[0..0]), w_anode3125w[2..2]);
	w_anode3205w[] = ( (w_anode3205w[2..2] & w_data3123w[2..2]), (w_anode3205w[1..1] & w_data3123w[1..1]), (w_anode3205w[0..0] & (! w_data3123w[0..0])), w_anode3125w[2..2]);
	w_anode3215w[] = ( (w_anode3215w[2..2] & w_data3123w[2..2]), (w_anode3215w[1..1] & w_data3123w[1..1]), (w_anode3215w[0..0] & w_data3123w[0..0]), w_anode3125w[2..2]);
	w_anode3227w[] = ( (w_anode3227w[1..1] & (! data_wire[4..4])), (w_anode3227w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3236w[] = ( (w_anode3236w[2..2] & (! w_data3123w[2..2])), (w_anode3236w[1..1] & (! w_data3123w[1..1])), (w_anode3236w[0..0] & (! w_data3123w[0..0])), w_anode3227w[2..2]);
	w_anode3247w[] = ( (w_anode3247w[2..2] & (! w_data3123w[2..2])), (w_anode3247w[1..1] & (! w_data3123w[1..1])), (w_anode3247w[0..0] & w_data3123w[0..0]), w_anode3227w[2..2]);
	w_anode3257w[] = ( (w_anode3257w[2..2] & (! w_data3123w[2..2])), (w_anode3257w[1..1] & w_data3123w[1..1]), (w_anode3257w[0..0] & (! w_data3123w[0..0])), w_anode3227w[2..2]);
	w_anode3267w[] = ( (w_anode3267w[2..2] & (! w_data3123w[2..2])), (w_anode3267w[1..1] & w_data3123w[1..1]), (w_anode3267w[0..0] & w_data3123w[0..0]), w_anode3227w[2..2]);
	w_anode3277w[] = ( (w_anode3277w[2..2] & w_data3123w[2..2]), (w_anode3277w[1..1] & (! w_data3123w[1..1])), (w_anode3277w[0..0] & (! w_data3123w[0..0])), w_anode3227w[2..2]);
	w_anode3287w[] = ( (w_anode3287w[2..2] & w_data3123w[2..2]), (w_anode3287w[1..1] & (! w_data3123w[1..1])), (w_anode3287w[0..0] & w_data3123w[0..0]), w_anode3227w[2..2]);
	w_anode3297w[] = ( (w_anode3297w[2..2] & w_data3123w[2..2]), (w_anode3297w[1..1] & w_data3123w[1..1]), (w_anode3297w[0..0] & (! w_data3123w[0..0])), w_anode3227w[2..2]);
	w_anode3307w[] = ( (w_anode3307w[2..2] & w_data3123w[2..2]), (w_anode3307w[1..1] & w_data3123w[1..1]), (w_anode3307w[0..0] & w_data3123w[0..0]), w_anode3227w[2..2]);
	w_anode3318w[] = ( (w_anode3318w[1..1] & data_wire[4..4]), (w_anode3318w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3327w[] = ( (w_anode3327w[2..2] & (! w_data3123w[2..2])), (w_anode3327w[1..1] & (! w_data3123w[1..1])), (w_anode3327w[0..0] & (! w_data3123w[0..0])), w_anode3318w[2..2]);
	w_anode3338w[] = ( (w_anode3338w[2..2] & (! w_data3123w[2..2])), (w_anode3338w[1..1] & (! w_data3123w[1..1])), (w_anode3338w[0..0] & w_data3123w[0..0]), w_anode3318w[2..2]);
	w_anode3348w[] = ( (w_anode3348w[2..2] & (! w_data3123w[2..2])), (w_anode3348w[1..1] & w_data3123w[1..1]), (w_anode3348w[0..0] & (! w_data3123w[0..0])), w_anode3318w[2..2]);
	w_anode3358w[] = ( (w_anode3358w[2..2] & (! w_data3123w[2..2])), (w_anode3358w[1..1] & w_data3123w[1..1]), (w_anode3358w[0..0] & w_data3123w[0..0]), w_anode3318w[2..2]);
	w_anode3368w[] = ( (w_anode3368w[2..2] & w_data3123w[2..2]), (w_anode3368w[1..1] & (! w_data3123w[1..1])), (w_anode3368w[0..0] & (! w_data3123w[0..0])), w_anode3318w[2..2]);
	w_anode3378w[] = ( (w_anode3378w[2..2] & w_data3123w[2..2]), (w_anode3378w[1..1] & (! w_data3123w[1..1])), (w_anode3378w[0..0] & w_data3123w[0..0]), w_anode3318w[2..2]);
	w_anode3388w[] = ( (w_anode3388w[2..2] & w_data3123w[2..2]), (w_anode3388w[1..1] & w_data3123w[1..1]), (w_anode3388w[0..0] & (! w_data3123w[0..0])), w_anode3318w[2..2]);
	w_anode3398w[] = ( (w_anode3398w[2..2] & w_data3123w[2..2]), (w_anode3398w[1..1] & w_data3123w[1..1]), (w_anode3398w[0..0] & w_data3123w[0..0]), w_anode3318w[2..2]);
	w_anode3409w[] = ( (w_anode3409w[1..1] & data_wire[4..4]), (w_anode3409w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3418w[] = ( (w_anode3418w[2..2] & (! w_data3123w[2..2])), (w_anode3418w[1..1] & (! w_data3123w[1..1])), (w_anode3418w[0..0] & (! w_data3123w[0..0])), w_anode3409w[2..2]);
	w_anode3429w[] = ( (w_anode3429w[2..2] & (! w_data3123w[2..2])), (w_anode3429w[1..1] & (! w_data3123w[1..1])), (w_anode3429w[0..0] & w_data3123w[0..0]), w_anode3409w[2..2]);
	w_anode3439w[] = ( (w_anode3439w[2..2] & (! w_data3123w[2..2])), (w_anode3439w[1..1] & w_data3123w[1..1]), (w_anode3439w[0..0] & (! w_data3123w[0..0])), w_anode3409w[2..2]);
	w_anode3449w[] = ( (w_anode3449w[2..2] & (! w_data3123w[2..2])), (w_anode3449w[1..1] & w_data3123w[1..1]), (w_anode3449w[0..0] & w_data3123w[0..0]), w_anode3409w[2..2]);
	w_anode3459w[] = ( (w_anode3459w[2..2] & w_data3123w[2..2]), (w_anode3459w[1..1] & (! w_data3123w[1..1])), (w_anode3459w[0..0] & (! w_data3123w[0..0])), w_anode3409w[2..2]);
	w_anode3469w[] = ( (w_anode3469w[2..2] & w_data3123w[2..2]), (w_anode3469w[1..1] & (! w_data3123w[1..1])), (w_anode3469w[0..0] & w_data3123w[0..0]), w_anode3409w[2..2]);
	w_anode3479w[] = ( (w_anode3479w[2..2] & w_data3123w[2..2]), (w_anode3479w[1..1] & w_data3123w[1..1]), (w_anode3479w[0..0] & (! w_data3123w[0..0])), w_anode3409w[2..2]);
	w_anode3489w[] = ( (w_anode3489w[2..2] & w_data3123w[2..2]), (w_anode3489w[1..1] & w_data3123w[1..1]), (w_anode3489w[0..0] & w_data3123w[0..0]), w_anode3409w[2..2]);
	w_data3123w[2..0] = data_wire[2..0];
END;
--VALID FILE
