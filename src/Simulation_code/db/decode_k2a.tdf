--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=31 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_k2a
( 
	data[4..0]	:	input;
	eq[30..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[30..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3503w[2..0]	: WIRE;
	w_anode3517w[3..0]	: WIRE;
	w_anode3534w[3..0]	: WIRE;
	w_anode3544w[3..0]	: WIRE;
	w_anode3554w[3..0]	: WIRE;
	w_anode3564w[3..0]	: WIRE;
	w_anode3574w[3..0]	: WIRE;
	w_anode3584w[3..0]	: WIRE;
	w_anode3594w[3..0]	: WIRE;
	w_anode3606w[2..0]	: WIRE;
	w_anode3616w[3..0]	: WIRE;
	w_anode3627w[3..0]	: WIRE;
	w_anode3637w[3..0]	: WIRE;
	w_anode3647w[3..0]	: WIRE;
	w_anode3657w[3..0]	: WIRE;
	w_anode3667w[3..0]	: WIRE;
	w_anode3677w[3..0]	: WIRE;
	w_anode3687w[3..0]	: WIRE;
	w_anode3698w[2..0]	: WIRE;
	w_anode3708w[3..0]	: WIRE;
	w_anode3719w[3..0]	: WIRE;
	w_anode3729w[3..0]	: WIRE;
	w_anode3739w[3..0]	: WIRE;
	w_anode3749w[3..0]	: WIRE;
	w_anode3759w[3..0]	: WIRE;
	w_anode3769w[3..0]	: WIRE;
	w_anode3779w[3..0]	: WIRE;
	w_anode3790w[2..0]	: WIRE;
	w_anode3800w[3..0]	: WIRE;
	w_anode3811w[3..0]	: WIRE;
	w_anode3821w[3..0]	: WIRE;
	w_anode3831w[3..0]	: WIRE;
	w_anode3841w[3..0]	: WIRE;
	w_anode3851w[3..0]	: WIRE;
	w_anode3861w[3..0]	: WIRE;
	w_anode3871w[3..0]	: WIRE;
	w_data3501w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[30..0] = eq_wire[30..0];
	eq_wire[] = ( ( w_anode3871w[3..3], w_anode3861w[3..3], w_anode3851w[3..3], w_anode3841w[3..3], w_anode3831w[3..3], w_anode3821w[3..3], w_anode3811w[3..3], w_anode3800w[3..3]), ( w_anode3779w[3..3], w_anode3769w[3..3], w_anode3759w[3..3], w_anode3749w[3..3], w_anode3739w[3..3], w_anode3729w[3..3], w_anode3719w[3..3], w_anode3708w[3..3]), ( w_anode3687w[3..3], w_anode3677w[3..3], w_anode3667w[3..3], w_anode3657w[3..3], w_anode3647w[3..3], w_anode3637w[3..3], w_anode3627w[3..3], w_anode3616w[3..3]), ( w_anode3594w[3..3], w_anode3584w[3..3], w_anode3574w[3..3], w_anode3564w[3..3], w_anode3554w[3..3], w_anode3544w[3..3], w_anode3534w[3..3], w_anode3517w[3..3]));
	w_anode3503w[] = ( (w_anode3503w[1..1] & (! data_wire[4..4])), (w_anode3503w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3517w[] = ( (w_anode3517w[2..2] & (! w_data3501w[2..2])), (w_anode3517w[1..1] & (! w_data3501w[1..1])), (w_anode3517w[0..0] & (! w_data3501w[0..0])), w_anode3503w[2..2]);
	w_anode3534w[] = ( (w_anode3534w[2..2] & (! w_data3501w[2..2])), (w_anode3534w[1..1] & (! w_data3501w[1..1])), (w_anode3534w[0..0] & w_data3501w[0..0]), w_anode3503w[2..2]);
	w_anode3544w[] = ( (w_anode3544w[2..2] & (! w_data3501w[2..2])), (w_anode3544w[1..1] & w_data3501w[1..1]), (w_anode3544w[0..0] & (! w_data3501w[0..0])), w_anode3503w[2..2]);
	w_anode3554w[] = ( (w_anode3554w[2..2] & (! w_data3501w[2..2])), (w_anode3554w[1..1] & w_data3501w[1..1]), (w_anode3554w[0..0] & w_data3501w[0..0]), w_anode3503w[2..2]);
	w_anode3564w[] = ( (w_anode3564w[2..2] & w_data3501w[2..2]), (w_anode3564w[1..1] & (! w_data3501w[1..1])), (w_anode3564w[0..0] & (! w_data3501w[0..0])), w_anode3503w[2..2]);
	w_anode3574w[] = ( (w_anode3574w[2..2] & w_data3501w[2..2]), (w_anode3574w[1..1] & (! w_data3501w[1..1])), (w_anode3574w[0..0] & w_data3501w[0..0]), w_anode3503w[2..2]);
	w_anode3584w[] = ( (w_anode3584w[2..2] & w_data3501w[2..2]), (w_anode3584w[1..1] & w_data3501w[1..1]), (w_anode3584w[0..0] & (! w_data3501w[0..0])), w_anode3503w[2..2]);
	w_anode3594w[] = ( (w_anode3594w[2..2] & w_data3501w[2..2]), (w_anode3594w[1..1] & w_data3501w[1..1]), (w_anode3594w[0..0] & w_data3501w[0..0]), w_anode3503w[2..2]);
	w_anode3606w[] = ( (w_anode3606w[1..1] & (! data_wire[4..4])), (w_anode3606w[0..0] & data_wire[3..3]), B"1");
	w_anode3616w[] = ( (w_anode3616w[2..2] & (! w_data3501w[2..2])), (w_anode3616w[1..1] & (! w_data3501w[1..1])), (w_anode3616w[0..0] & (! w_data3501w[0..0])), w_anode3606w[2..2]);
	w_anode3627w[] = ( (w_anode3627w[2..2] & (! w_data3501w[2..2])), (w_anode3627w[1..1] & (! w_data3501w[1..1])), (w_anode3627w[0..0] & w_data3501w[0..0]), w_anode3606w[2..2]);
	w_anode3637w[] = ( (w_anode3637w[2..2] & (! w_data3501w[2..2])), (w_anode3637w[1..1] & w_data3501w[1..1]), (w_anode3637w[0..0] & (! w_data3501w[0..0])), w_anode3606w[2..2]);
	w_anode3647w[] = ( (w_anode3647w[2..2] & (! w_data3501w[2..2])), (w_anode3647w[1..1] & w_data3501w[1..1]), (w_anode3647w[0..0] & w_data3501w[0..0]), w_anode3606w[2..2]);
	w_anode3657w[] = ( (w_anode3657w[2..2] & w_data3501w[2..2]), (w_anode3657w[1..1] & (! w_data3501w[1..1])), (w_anode3657w[0..0] & (! w_data3501w[0..0])), w_anode3606w[2..2]);
	w_anode3667w[] = ( (w_anode3667w[2..2] & w_data3501w[2..2]), (w_anode3667w[1..1] & (! w_data3501w[1..1])), (w_anode3667w[0..0] & w_data3501w[0..0]), w_anode3606w[2..2]);
	w_anode3677w[] = ( (w_anode3677w[2..2] & w_data3501w[2..2]), (w_anode3677w[1..1] & w_data3501w[1..1]), (w_anode3677w[0..0] & (! w_data3501w[0..0])), w_anode3606w[2..2]);
	w_anode3687w[] = ( (w_anode3687w[2..2] & w_data3501w[2..2]), (w_anode3687w[1..1] & w_data3501w[1..1]), (w_anode3687w[0..0] & w_data3501w[0..0]), w_anode3606w[2..2]);
	w_anode3698w[] = ( (w_anode3698w[1..1] & data_wire[4..4]), (w_anode3698w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3708w[] = ( (w_anode3708w[2..2] & (! w_data3501w[2..2])), (w_anode3708w[1..1] & (! w_data3501w[1..1])), (w_anode3708w[0..0] & (! w_data3501w[0..0])), w_anode3698w[2..2]);
	w_anode3719w[] = ( (w_anode3719w[2..2] & (! w_data3501w[2..2])), (w_anode3719w[1..1] & (! w_data3501w[1..1])), (w_anode3719w[0..0] & w_data3501w[0..0]), w_anode3698w[2..2]);
	w_anode3729w[] = ( (w_anode3729w[2..2] & (! w_data3501w[2..2])), (w_anode3729w[1..1] & w_data3501w[1..1]), (w_anode3729w[0..0] & (! w_data3501w[0..0])), w_anode3698w[2..2]);
	w_anode3739w[] = ( (w_anode3739w[2..2] & (! w_data3501w[2..2])), (w_anode3739w[1..1] & w_data3501w[1..1]), (w_anode3739w[0..0] & w_data3501w[0..0]), w_anode3698w[2..2]);
	w_anode3749w[] = ( (w_anode3749w[2..2] & w_data3501w[2..2]), (w_anode3749w[1..1] & (! w_data3501w[1..1])), (w_anode3749w[0..0] & (! w_data3501w[0..0])), w_anode3698w[2..2]);
	w_anode3759w[] = ( (w_anode3759w[2..2] & w_data3501w[2..2]), (w_anode3759w[1..1] & (! w_data3501w[1..1])), (w_anode3759w[0..0] & w_data3501w[0..0]), w_anode3698w[2..2]);
	w_anode3769w[] = ( (w_anode3769w[2..2] & w_data3501w[2..2]), (w_anode3769w[1..1] & w_data3501w[1..1]), (w_anode3769w[0..0] & (! w_data3501w[0..0])), w_anode3698w[2..2]);
	w_anode3779w[] = ( (w_anode3779w[2..2] & w_data3501w[2..2]), (w_anode3779w[1..1] & w_data3501w[1..1]), (w_anode3779w[0..0] & w_data3501w[0..0]), w_anode3698w[2..2]);
	w_anode3790w[] = ( (w_anode3790w[1..1] & data_wire[4..4]), (w_anode3790w[0..0] & data_wire[3..3]), B"1");
	w_anode3800w[] = ( (w_anode3800w[2..2] & (! w_data3501w[2..2])), (w_anode3800w[1..1] & (! w_data3501w[1..1])), (w_anode3800w[0..0] & (! w_data3501w[0..0])), w_anode3790w[2..2]);
	w_anode3811w[] = ( (w_anode3811w[2..2] & (! w_data3501w[2..2])), (w_anode3811w[1..1] & (! w_data3501w[1..1])), (w_anode3811w[0..0] & w_data3501w[0..0]), w_anode3790w[2..2]);
	w_anode3821w[] = ( (w_anode3821w[2..2] & (! w_data3501w[2..2])), (w_anode3821w[1..1] & w_data3501w[1..1]), (w_anode3821w[0..0] & (! w_data3501w[0..0])), w_anode3790w[2..2]);
	w_anode3831w[] = ( (w_anode3831w[2..2] & (! w_data3501w[2..2])), (w_anode3831w[1..1] & w_data3501w[1..1]), (w_anode3831w[0..0] & w_data3501w[0..0]), w_anode3790w[2..2]);
	w_anode3841w[] = ( (w_anode3841w[2..2] & w_data3501w[2..2]), (w_anode3841w[1..1] & (! w_data3501w[1..1])), (w_anode3841w[0..0] & (! w_data3501w[0..0])), w_anode3790w[2..2]);
	w_anode3851w[] = ( (w_anode3851w[2..2] & w_data3501w[2..2]), (w_anode3851w[1..1] & (! w_data3501w[1..1])), (w_anode3851w[0..0] & w_data3501w[0..0]), w_anode3790w[2..2]);
	w_anode3861w[] = ( (w_anode3861w[2..2] & w_data3501w[2..2]), (w_anode3861w[1..1] & w_data3501w[1..1]), (w_anode3861w[0..0] & (! w_data3501w[0..0])), w_anode3790w[2..2]);
	w_anode3871w[] = ( (w_anode3871w[2..2] & w_data3501w[2..2]), (w_anode3871w[1..1] & w_data3501w[1..1]), (w_anode3871w[0..0] & w_data3501w[0..0]), w_anode3790w[2..2]);
	w_data3501w[2..0] = data_wire[2..0];
END;
--VALID FILE
